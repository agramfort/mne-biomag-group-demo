

.. _sphx_glr_auto_examples_demos_plot_tsss_analysis.py:


==================================
Analysis for one subject with tSSS
==================================

Run the analysis.



.. code-block:: python

    import os.path as op
    import sys

    import numpy as np

    import mne

    sys.path.append(op.join('..', '..', 'processing'))
    from library.config import (study_path, meg_dir, ylim,
                                set_matplotlib_defaults)  # noqa: E402

    set_matplotlib_defaults()







Configuration



.. code-block:: python


    subjects_dir = op.join(study_path, 'subjects')

    subject = "sub003"
    subject_dir = op.join(meg_dir, subject)
    st_duration = 1







Continuous data



.. code-block:: python

    raw_fname = op.join(study_path, 'ds117', subject, 'MEG', 'run_01_raw.fif')
    raw_filt_fname = op.join(subject_dir,
                             'run_01_filt_tsss_%d_raw.fif' % st_duration)

    raw = mne.io.read_raw_fif(raw_fname)
    raw_filt = mne.io.read_raw_fif(raw_filt_fname)







Filtering :ref:`sphx_glr_auto_scripts_04-python_filtering.py`.



.. code-block:: python

    raw.plot_psd(n_fft=8192, average=False, xscale='log', show=False)
    raw_filt.plot_psd(n_fft=8192, average=False, xscale='log')




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_001.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_002.png
            :scale: 47




Events :ref:`sphx_glr_auto_scripts_02-extract_events.py`.
Epochs :ref:`sphx_glr_auto_scripts_06-make_epochs.py`.



.. code-block:: python

    eve_fname = op.join(subject_dir, 'run_01_filt_sss-eve.fif')
    epo_fname = op.join(subject_dir, '%s-tsss_%d-epo.fif' % (subject, st_duration))

    events = mne.read_events(eve_fname)
    fig = mne.viz.plot_events(events, show=False)
    fig.suptitle('Events from run 01')

    epochs = mne.read_epochs(epo_fname)
    epochs.plot_drop_log()




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_003.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_004.png
            :scale: 47




Evoked responses :ref:`sphx_glr_auto_scripts_07-make_evoked.py`



.. code-block:: python

    ave_fname = op.join(subject_dir, '%s-tsss_%d-ave.fif' % (subject, st_duration))
    evoked = mne.read_evokeds(ave_fname)
    famous_evo, scrambled_evo, unfamiliar_evo, contrast_evo, faces_evo = evoked[:5]







Faces



.. code-block:: python

    faces_evo.plot(spatial_colors=True, gfp=True, ylim=ylim,
                   window_title='Faces %s' % subject)




.. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_005.png
    :align: center




Famous



.. code-block:: python

    famous_evo.plot(spatial_colors=True, gfp=True, ylim=ylim,
                    window_title='Famous %s' % subject)




.. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_006.png
    :align: center




Scrambled



.. code-block:: python

    scrambled_evo.plot(spatial_colors=True, gfp=True, ylim=ylim,
                       window_title='Scrambled %s' % subject)




.. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_007.png
    :align: center




Unfamiliar



.. code-block:: python

    unfamiliar_evo.plot(spatial_colors=True, gfp=True, ylim=ylim,
                        window_title='Unfamiliar %s' % subject)




.. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_008.png
    :align: center




Faces - scrambled



.. code-block:: python

    contrast_evo.plot(spatial_colors=True, gfp=True, ylim=ylim,
                      window_title='Faces - scrambled %s' % subject)




.. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_009.png
    :align: center




Topomaps



.. code-block:: python

    times = np.arange(0.05, 0.3, 0.025)
    famous_evo.plot_topomap(times=times, title='Famous %s' % subject,
                            show=False)
    scrambled_evo.plot_topomap(times=times, title='Scrambled %s' % subject,
                               show=False)
    unfamiliar_evo.plot_topomap(times=times, title='Unfamiliar %s' % subject,
                                show=False)
    contrast_evo.plot_topomap(times=times, title='Faces - scrambled %s' % subject,
                              show=True)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_010.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_011.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_012.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_013.png
            :scale: 47




ICA (ECG)



.. code-block:: python

    ica_fname = op.join(subject_dir, 'run_concat-tsss_%d-ica.fif'
                        % (st_duration,))
    ica = mne.preprocessing.read_ica(ica_fname)

    ecg_scores = np.load(
        op.join(subject_dir, '%s-tsss_%d-ecg-scores.npy'
                % (subject, st_duration)))
    ica.plot_scores(ecg_scores, show=False, title='ICA ECG scores')
    ecg_evoked = mne.read_evokeds(
        op.join(subject_dir, '%s-tsss_%d-ecg-ave.fif'
                % (subject, st_duration)))[0]
    ica.plot_sources(ecg_evoked, title='ECG evoked', show=True)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_014.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_015.png
            :scale: 47




ICA (EOG)



.. code-block:: python

    eog_scores = np.load(
        op.join(subject_dir, '%s-tsss_%d-eog-scores.npy'
                % (subject, st_duration)))
    ica.plot_scores(eog_scores, show=False, title='ICA EOG scores')
    eog_evoked = mne.read_evokeds(
        op.join(subject_dir, '%s-tsss_%d-eog-ave.fif'
                % (subject, st_duration)))[0]
    ica.plot_sources(eog_evoked, title='EOG evoked', show=True)




.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_016.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_017.png
            :scale: 47




Covariance :ref:`sphx_glr_auto_scripts_07-make_evoked.py`.



.. code-block:: python

    cov_fname = op.join(subject_dir,
                        '%s-tsss_%d-cov.fif' % (subject, st_duration))
    cov = mne.read_cov(cov_fname)
    mne.viz.plot_cov(cov, faces_evo.info)
    rank_dict = dict(
        meg=raw_filt.copy().load_data().pick_types(eeg=False).estimate_rank())
    for kind in ('meg', 'eeg'):
        type_dict = dict(meg=False)
        type_dict.update({kind: True})
        fig = faces_evo.copy().apply_baseline().pick_types(
            **type_dict).plot_white(cov, rank=rank_dict if kind == 'meg' else {})
        for ax, ylabel in zip(fig.axes, ('Whitened\n%s (AU)' % (kind.upper(),),
                                         'GFP ($\chi^2$)')):
            ax.set(ylabel=ylabel)
        fig.axes[-1].set(title='', ylim=[0, 20])
        fig.axes[-1].legend(loc='lower center')
        fig.set_size_inches(3.5, 3, forward=True)
        fig.tight_layout()
        fig.savefig(op.join('..', 'figures', '%s-tsss_%d-plot_white_%s.pdf'
                            % (subject, st_duration, kind)))



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_018.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_019.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_020.png
            :scale: 47

    *

      .. image:: /auto_examples/demos/images/sphx_glr_plot_tsss_analysis_021.png
            :scale: 47




**Total running time of the script:** ( 0 minutes  37.352 seconds)



.. only :: html

 .. container:: sphx-glr-footer


  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_tsss_analysis.py <plot_tsss_analysis.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_tsss_analysis.ipynb <plot_tsss_analysis.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
